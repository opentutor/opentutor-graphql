{
  "service": {
    "service": "opentutor-graphql",
    "serviceObject": {
      "name": "opentutor-graphql"
    },
    "provider": {
      "name": "aws",
      "region": "us-east-1",
      "stage": "dev",
      "runtime": "nodejs18.x",
      "endpointType": "regional",
      "memorySize": 2048,
      "tracing": {
        "lambda": true,
        "apiGateway": true
      },
      "logRetentionInDays": 30,
      "apiGateway": {
        "shouldStartNameWithService": true,
        "minimumCompressionSize": 1024
      },
      "logs": {
        "restApi": {
          "accessLogging": true,
          "executionLogging": true,
          "level": "INFO",
          "fullExecutionData": true
        }
      },
      "environment": {
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
        "API_SECRET": "api-pal3-opentutor-secret-1m9Sl3",
        "JWT_SECRET": "jwt-pal3-opentutor-secret-dsk1<b",
        "GOOGLE_CLIENT_ID": "1032888344124-aim2fdal2cfvqf290tullhs1rt9rahvu.apps.googleusercontent.com",
        "SESSION_SECURITY_KEY": "ewkXL9mDYItYOZu3LP5g",
        "MONGO_URI": "mongodb+srv://opentutor-dev:5ivoQXFr5eLPmB3o@cluster0-cu6as.mongodb.net/opentutor-dev?retryWrites=true&w=majority",
        "STAGE": "dev",
        "NODE_ENV": "opentutor-dev",
        "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=50"
      },
      "stackTags": {
        "Environment": "dev",
        "Source": "serverless-framework",
        "Project": "opentutor",
        "Component": "opentutor-graphql"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/opentutor-graphql-dev-app",
              "RetentionInDays": 30
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": ["lambda.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": ["-", ["opentutor-graphql", "dev", "lambda"]]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/opentutor-graphql-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": ["logs:PutLogEvents"],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/opentutor-graphql-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords"
                        ],
                        "Resource": ["*"]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "opentutor-graphql",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/opentutor-graphql/dev/1685609475388-2023-06-01T08:51:15.388Z/app.zip"
              },
              "Handler": "./src/lambda.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "opentutor-graphql-dev-app",
              "MemorySize": 2048,
              "Timeout": 20,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "API_SECRET": "api-pal3-opentutor-secret-1m9Sl3",
                  "JWT_SECRET": "jwt-pal3-opentutor-secret-dsk1<b",
                  "GOOGLE_CLIENT_ID": "1032888344124-aim2fdal2cfvqf290tullhs1rt9rahvu.apps.googleusercontent.com",
                  "SESSION_SECURITY_KEY": "ewkXL9mDYItYOZu3LP5g",
                  "MONGO_URI": "mongodb+srv://opentutor-dev:5ivoQXFr5eLPmB3o@cluster0-cu6as.mongodb.net/opentutor-dev?retryWrites=true&w=majority",
                  "STAGE": "dev",
                  "NODE_ENV": "opentutor-dev",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=50"
                }
              },
              "Role": {
                "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
              }
            },
            "DependsOn": ["AppLogGroup"]
          },
          "AppLambdaVersion3YuY7R3pzbjkg3MW5h93hPAaQAWryCGNPYoKIoDpJ8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "1ENDTcKGTRZXrMdcs7Nx1xl7dEuHRnlnzYkD2BTmt2U="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "opentutor-graphql-dev",
              "EndpointConfiguration": {
                "Types": ["REGIONAL"]
              },
              "Policy": "",
              "MinimumCompressionSize": 1024
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProxyVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET,HEAD,PATCH,POST,PUT'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": ["AppLambdaFunction", "Arn"]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": ["AppLambdaPermissionApiGateway"]
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": ["AppLambdaFunction", "Arn"]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": ["AppLambdaPermissionApiGateway"]
          },
          "ApiGatewayDeployment1685609469805": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodOptions",
              "ApiGatewayMethodProxyVarOptions",
              "ApiGatewayMethodGet",
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "AppLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["AppLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiGatewayLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/api-gateway/opentutor-graphql-dev",
              "RetentionInDays": 30
            }
          },
          "CustomApiGatewayAccountCloudWatchRole": {
            "Type": "Custom::ApiGatewayAccountRole",
            "Version": 1,
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": ["lambda.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      ["dev", "opentutor-graphql", "custom-resources-lambda"]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "iam:",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "role/*"
                            ]
                          ]
                        },
                        "Action": [
                          "iam:AttachRolePolicy",
                          "iam:CreateRole",
                          "iam:ListAttachedRolePolicies",
                          "iam:PassRole"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "apigateway:*::/account"
                            ]
                          ]
                        },
                        "Action": ["apigateway:GET", "apigateway:PATCH"]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/opentutor-graphql/dev/1685609475388-2023-06-01T08:51:15.388Z/custom-resources.zip"
              },
              "FunctionName": "opentutor-graphql-dev-custom-resource-apigw-cw-role",
              "Handler": "api-gateway-cloud-watch-role/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs16.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": ["IamRoleCustomResourcesLambdaExecution", "Arn"]
              }
            },
            "DependsOn": ["IamRoleCustomResourcesLambdaExecution"]
          },
          "FirewallAssociation": {
            "Type": "AWS::WAFv2::WebACLAssociation",
            "Condition": "AttachFirewall",
            "DependsOn": ["ApiGatewayRestApi"],
            "Properties": {
              "ResourceArn": {
                "Fn::Sub": "arn:aws:apigateway:${AWS::Region}::/restapis/${ApiGatewayRestApi}/stages/dev"
              },
              "WebACLArn": "arn:aws:wafv2:us-east-1:503351158233:regional/webacl/dev-opentutor-api-wafv2-webacl/1fad8000-b957-40b4-aec8-633e46c627ab"
            }
          },
          "Response5xx": {
            "Type": "AWS::ApiGateway::GatewayResponse",
            "Properties": {
              "ResponseParameters": {
                "gatewayresponse.header.Access-Control-Allow-Origin": "method.request.header.origin"
              },
              "ResponseType": "DEFAULT_5XX",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "Response4xx": {
            "Type": "AWS::ApiGateway::GatewayResponse",
            "Properties": {
              "ResponseParameters": {
                "gatewayresponse.header.Access-Control-Allow-Origin": "method.request.header.origin"
              },
              "ResponseType": "DEFAULT_4XX",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-opentutor-graphql-dev-ServerlessDeploymentBucketName"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersion3YuY7R3pzbjkg3MW5h93hPAaQAWryCGNPYoKIoDpJ8"
            },
            "Export": {
              "Name": "sls-opentutor-graphql-dev-AppLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-opentutor-graphql-dev-ServiceEndpoint"
            }
          }
        },
        "Conditions": {
          "AttachFirewall": {
            "Fn::Or": [
              {
                "Fn::Equals": ["dev", "qa"]
              },
              {
                "Fn::Equals": ["dev", "prod"]
              }
            ]
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "domain": {
        "dev": "api-dev.opentutor.info",
        "qa": "api-qa.opentutor.info",
        "prod": "api.opentutor.info"
      },
      "customDomain": {
        "domainName": "api-dev.opentutor.info",
        "basePath": "graphql",
        "stage": "dev",
        "endpointType": "regional",
        "apiType": "rest",
        "createRoute53Record": true,
        "securityPolicy": "tls_1_2",
        "autoDomain": true,
        "preserveExternalPathMappings": true
      },
      "webpack": {
        "excludeFiles": "**/*.spec.ts"
      },
      "esbuild": {
        "bundle": true,
        "minify": false,
        "packager": "npm",
        "sourcemap": true,
        "keepNames": true,
        "platform": "node",
        "target": "node18",
        "exclude": ["aws-sdk"],
        "define": {
          "require.resolve": "undefined"
        },
        "concurrency": 10,
        "watch": {
          "pattern": ["src/**/*.ts"],
          "ignore": [".serverless/**/*", "node_modules", ".build", "dist"]
        }
      },
      "stages": {
        "dev": {
          "WEBACL_ARN": "arn:aws:wafv2:us-east-1:503351158233:regional/webacl/dev-opentutor-api-wafv2-webacl/1fad8000-b957-40b4-aec8-633e46c627ab",
          "MONGO_URI": "mongodb+srv://opentutor-dev:5ivoQXFr5eLPmB3o@cluster0-cu6as.mongodb.net/opentutor-dev?retryWrites=true&w=majority"
        },
        "qa": {
          "WEBACL_ARN": "arn:aws:wafv2:us-east-1:503351158233:regional/webacl/qa-opentutor-api-wafv2-webacl/439f2381-6cdf-4ad7-b9a2-ffc3558dcaa7",
          "MONGO_URI": "mongodb+srv://opentutor-qa:wMoo7elGgSwGGHN1@cluster0-cu6as.mongodb.net/opentutor-qa?retryWrites=true&w=majority"
        },
        "prod": {
          "WEBACL_ARN": "",
          "MONGO_URI": ""
        }
      }
    },
    "plugins": ["serverless-esbuild", "serverless-domain-manager"],
    "pluginsData": {},
    "functions": {
      "app": {
        "timeout": 20,
        "handler": "./src/lambda.handler",
        "events": [
          {
            "http": {
              "path": "",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": ["OPTIONS", "GET"],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "{proxy+}",
              "method": "any",
              "cors": {
                "origin": "*",
                "methods": ["OPTIONS", "ANY"],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "opentutor-graphql-dev-app",
        "package": {
          "artifact": ".serverless/app.zip"
        },
        "memory": 2048,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "AppLambdaVersion3YuY7R3pzbjkg3MW5h93hPAaQAWryCGNPYoKIoDpJ8"
      }
    },
    "resources": {
      "Conditions": {
        "AttachFirewall": {
          "Fn::Or": [
            {
              "Fn::Equals": ["dev", "qa"]
            },
            {
              "Fn::Equals": ["dev", "prod"]
            }
          ]
        }
      },
      "Resources": {
        "FirewallAssociation": {
          "Type": "AWS::WAFv2::WebACLAssociation",
          "Condition": "AttachFirewall",
          "DependsOn": ["ApiGatewayRestApi"],
          "Properties": {
            "ResourceArn": {
              "Fn::Sub": "arn:aws:apigateway:${AWS::Region}::/restapis/${ApiGatewayRestApi}/stages/dev"
            },
            "WebACLArn": "arn:aws:wafv2:us-east-1:503351158233:regional/webacl/dev-opentutor-api-wafv2-webacl/1fad8000-b957-40b4-aec8-633e46c627ab"
          }
        },
        "Response5xx": {
          "Type": "AWS::ApiGateway::GatewayResponse",
          "Properties": {
            "ResponseParameters": {
              "gatewayresponse.header.Access-Control-Allow-Origin": "method.request.header.origin"
            },
            "ResponseType": "DEFAULT_5XX",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "Response4xx": {
          "Type": "AWS::ApiGateway::GatewayResponse",
          "Properties": {
            "ResponseParameters": {
              "gatewayresponse.header.Access-Control-Allow-Origin": "method.request.header.origin"
            },
            "ResponseType": "DEFAULT_4XX",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "opentutor-graphql",
      "frameworkVersion": "3",
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/opentutor-graphql/dev/code-artifacts"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/opentutor-graphql/dev/1685609475388-2023-06-01T08:51:15.388Z",
    "artifact": ""
  }
}
